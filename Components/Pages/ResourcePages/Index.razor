@page "/resources"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BuildMasterPro.Data
@using BuildMasterPro.Services
@implements IAsyncDisposable
@inject IDbContextFactory<BuildMasterPro.Data.ApplicationDbContext> DbFactory
@inject ResourceService resourceService
@using Microsoft.AspNetCore.Authorization

<PageTitle>Index</PageTitle>

<h1>RESOURCES</h1>

<p>
    <a href="resources/create">Create New</a>
</p>

<Microsoft.AspNetCore.Components.QuickGrid.QuickGrid Class="table" Items="context.Resource">
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="resource => resource.Name" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="resource => resource.Description" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="resource => resource.Type" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="resource => resource.Status" />
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="resource => resource.Quantity" />

    <Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn Context="resource">
        <a href="@($"resources/edit?resourceid={resource.ResourceId}")">Edit</a> |
        <a href="@($"resources/details?resourceid={resource.ResourceId}")">Details</a> |
        <a href="@($"resources/delete?resourceid={resource.ResourceId}")">Delete</a>
    </Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn>
</Microsoft.AspNetCore.Components.QuickGrid.QuickGrid>
@* <MudDataGrid Items="context.Resource">
    <Columns>
        <MudBlazor.PropertyColumn Property="resource => resource.Name" />
        <MudBlazor.PropertyColumn Property="resource => resource.Description" />
        <MudBlazor.PropertyColumn Property="resource => resource.Type" />
        <MudBlazor.PropertyColumn Property="resource => resource.Status" />
        <MudBlazor.PropertyColumn Property="resource => resource.Quantity" />
    </Columns>
</MudDataGrid> *@

@* <MudTable Items="@Elements.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Sign</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Position</MudTh>
        <MudTh>Molar mass</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.Number</MudTd>
        <MudTd DataLabel="Sign">@context.Sign</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Position" HideSmall="_hidePosition">@context.Position</MudTd>
        <MudTd DataLabel="Molar mass">@context.Molar</MudTd>
    </RowTemplate>
</MudTable> *@

@code {
    private ApplicationDbContext context = default!;
    private List<Resource> resources { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
