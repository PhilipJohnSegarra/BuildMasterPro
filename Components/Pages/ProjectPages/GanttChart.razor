@page "/gantt"
@using Syncfusion.Blazor.Gantt
@using BuildMasterPro.Data
@inject BuildMasterPro.Services.ProjectTaskService TaskService

@* <SfGantt DataSource="@TaskCollection" Height="100%" Width="100%">
    <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Duration="Duration" Progress="Progress" ParentID="ParentId" Dependency="Predecessor">
    </GanttTaskFields>
</SfGantt>

@code {
    private List<TaskData> TaskCollection { get; set; } = new();
    public List<ProjectTask> Tasks { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {

        Tasks = await TaskService.GetCurrentProjtasksAsync();
        await GetTaskCollectionAsync();
    }

    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public string Predecessor { get; set; }
        public int? ParentId { get; set; }
    }

    public async Task GetTaskCollectionAsync()
    {
        // TaskCollection = new List<TaskData>() {
        //     // new TaskData() { TaskId = 1, TaskName = "Project initiation", StartDate = new DateTime(2022, 04, 05), EndDate = new DateTime(2022, 04, 21), },
        //     new TaskData() { TaskId = 2, TaskName = "Identify Site location", StartDate = new DateTime(2022, 04, 05), Duration = "4", Progress = 50 },
        //     new TaskData() { TaskId = 3, TaskName = "Perform soil test", StartDate = new DateTime(2022, 04, 05), Duration = "4", Progress = 50, Predecessor = "2" }
        // };

        foreach(var task in Tasks)
        {
            TaskCollection.Add(
                new TaskData()
                {
                    TaskId = task.TaskId,
                    TaskName = task.TaskName,
                    StartDate = task.PlannedStartDate,
                    EndDate = task.PlannedEndDate,
                    Progress = 6,
                    Duration = ((int)(task.PlannedEndDate - task.PlannedStartDate).TotalDays).ToString()
                }
            );
        }


    }
} *@


@* @page "/gantt"
@using BuildMasterPro.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext Context
@inject Blazored.LocalStorage.ILocalStorageService LS
@inject BuildMasterPro.Services.ProjectService ProjectService

<h3>GanttChart of @Project!.ProjectName</h3>

@code {
    [SupplyParameterFromQuery]
    public int ProjectId { get; set; }

    public Project? Project { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Project = await ProjectService.GetCurrentProjectAsync();
    }
} *@
