@page "/projecttasks/details"
@using Microsoft.EntityFrameworkCore
@using BuildMasterPro.Data
@using BuildMasterPro.Services
@using BuildMasterPro.Components.Pages.Dialogs
@rendermode InteractiveServer
@inject IDbContextFactory<BuildMasterPro.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject ProjectTaskService TaskService
@inject IDialogService DialogService

<MudDialogProvider FullWidth="true" MaxWidth="MaxWidth.Medium"/>
<MudThemeProvider/>

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" TabHeaderClass="SecondaryBG" PanelClass="pa-0" Style="min-height:80%;">
    <MudTabPanel Class="MainText" Text="Activities">
        <MudPaper Height="100%" Elevation="0">
            <MudText>Content One</MudText>
            <MudButton OnClick="OpenDialogAsync">Add Activity</MudButton>
        </MudPaper>
        
    </MudTabPanel>
    <MudTabPanel Class="MainText" Text="Tab Two">
        <MudText>Content Two</MudText>
    </MudTabPanel>
    <MudTabPanel Class="MainText" Text="Tab Three">
        <MudText>Content Three</MudText>
    </MudTabPanel>
</MudTabs>

@* <div>
    <h2>ProjectTask</h2>
    <hr />
    @if (projecttask is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ProjectId</dt>
            <dd class="col-sm-10">@projecttask.ProjectId</dd>
            <dt class="col-sm-2">TaskName</dt>
            <dd class="col-sm-10">@projecttask.TaskName</dd>
            <dt class="col-sm-2">TaskDescription</dt>
            <dd class="col-sm-10">@projecttask.TaskDescription</dd>
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@projecttask.StartDate</dd>
            <dt class="col-sm-2">DueDate</dt>
            <dd class="col-sm-10">@projecttask.DueDate</dd>
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@projecttask.Status</dd>
            <dt class="col-sm-2">Priority</dt>
            <dd class="col-sm-10">@projecttask.Priority</dd>
        </dl>
        <div>
            <a href="@($"/projecttasks/edit?taskid={projecttask.TaskId}")">Edit</a> |
            <a href="@($"/projecttasks")">Back to List</a>
        </div>
    }
</div> *@

@code {
    private ProjectTask? projecttask;

    [SupplyParameterFromQuery]
    private int TaskId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        projecttask = await context.ProjectTask.FirstOrDefaultAsync(m => m.TaskId == TaskId);

        if (projecttask is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        return DialogService.ShowAsync<TaskActivityAdderDialog>("Simple Dialog", options);
    }
}
