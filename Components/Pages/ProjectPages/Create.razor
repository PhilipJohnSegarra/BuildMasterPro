@page "/projects/create"
@using Microsoft.EntityFrameworkCore
@using BuildMasterPro.Data
@inject IDbContextFactory<BuildMasterPro.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject BuildMasterPro.Services.ProjectService ProjectService

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Project</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Project" OnValidSubmit="AddProject" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="projectname" class="form-label">ProjectName:</label> 
                <InputText id="projectname" @bind-Value="Project.ProjectName" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Project.ProjectName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputTextArea id="description" @bind-Value="Project.Description" class="form-control" /> 
                <ValidationMessage For="() => Project.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="startdate" class="form-label">Startdate:</label> 
                <InputDate id="startdate" @bind-Value="Project.Startdate" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Project.Startdate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="enddate" class="form-label">Enddate:</label> 
                <InputDate id="enddate" @bind-Value="Project.Enddate" class="form-control" /> 
                <ValidationMessage For="() => Project.Enddate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label> 
                <InputText id="status" @bind-Value="Project.Status" class="form-control" /> 
                <ValidationMessage For="() => Project.Status" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/projects">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Project Project { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProject()
    {
        try
        {
            await ProjectService.CreateProjectAsync(Project);
            NavigationManager.NavigateTo("/projects");
        }
        catch
        {
            NavigationManager.NavigateTo("notfound");
        }

        
    }
}
