@page "/projects"
@rendermode InteractiveServer
@using System.ComponentModel
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BuildMasterPro.Data
@using BuildMasterPro.Services
@inject NavigationManager NavManager
@inject ProjectService ProjectService
@inject ProtectedSessionStorage ProtectedSessionStore
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<MudPopoverProvider />
<MudDialogProvider />
<MudThemeProvider />

<PageTitle>Index</PageTitle>

<h3 style="margin:0 0 1rem 0;">PROJECTS</h3>

<MudDataGrid T="Project" Items="ProjectService.Projects" Bordered="false" Dense="true" RowClick="GoToProject" Hover="true" Style="height:89%;" Class="full-height-datagrid">
    <Columns>
        <HierarchyColumn T="Project"/>
        <MudBlazor.PropertyColumn Property="project => project.ProjectName" CellClass="row" HeaderStyle="height:60px;width:50%;font-weight:bold;"/>
        <MudBlazor.PropertyColumn Property="project => project.Startdate.ToShortDateString()" CellClass="row" HeaderStyle="height:60px;width:15%;font-weight:bold;" />
        <MudBlazor.PropertyColumn Property="project => project.Enddate.ToShortDateString()" CellClass="row" HeaderStyle="height:60px;width:15%;font-weight:bold;" />
        <MudBlazor.PropertyColumn Property="project => project.Status" CellClass="row" HeaderStyle="height:60px;width:15%;font-weight:bold;" />
        <MudBlazor.TemplateColumn CellClass="d-flex justify-center " HeaderStyle="height:60px;width:5%;font-weight:bold;">
            <CellTemplate Context="context">
                <MudTooltip Text="Edit">
                    <MudIconButton Class="action-column" Icon="@Icons.Material.Filled.Edit" OnClick="@(async ()=>{await ProjectService.SetCurrentProjectAsync(context.Item);
                                                                                      NavManager.NavigateTo($"projects/edit?projectid={context.Item.ProjectId}");
                                                                                      })" />
                </MudTooltip>
@*                 <MudTooltip Text="Details">
                    <MudIconButton Icon="@Icons.Material.Filled.Share" OnClick="@(async ()=>{
                                                                                                 GoToProject(context.Item);})" />
                </MudTooltip> *@
                <MudTooltip Text="Delete">
                    <MudIconButton Class="action-column" Icon="@Icons.Material.Filled.Delete" OnClick="@(async ()=>{await ProjectService.SetCurrentProjectAsync(context.Item);
                                                                                        NavManager.NavigateTo($"projects/delete?projectid={context.Item.ProjectId}");
                                                                                        })" />
                </MudTooltip>
            </CellTemplate>
        </MudBlazor.TemplateColumn>
    </Columns>
    <ChildRowContent>
        <MudCard Class="MainBG">
            <MudCardHeader>
                <MudText Typo="Typo.h6">@context.Item.ProjectName</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Date Started: @context.Item.Startdate</MudText>
                <MudText>CreatedBy: </MudText>
            </MudCardContent>
        </MudCard>
    </ChildRowContent>
</MudDataGrid>

@* <MudTable Items="@ProjectService.Projects" 
          FixedHeader="true" 
          FixedFooter="true" 
          Height="100%" Hover=true 
          RowClass="RowTemplate" 
          Style="height:89%;" 
          RowStyle="border-bottom:none;">
    <HeaderContent>
        <MudTh>View</MudTh>
        <MudTh Style="height:70px;font-weight:bold;" Class="SecondaryText">Title</MudTh>
        <MudTh Style="height:70px;font-weight:bold;" Class="SecondaryText">Start Date</MudTh>
        <MudTh Style="height:70px;font-weight:bold;" Class="SecondaryText">Status</MudTh>
        <MudTh Style="width:200px;"></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudIconButton Icon="@Icons.Material.Filled.FileOpen"/>
        </MudTd>
        <MudTd>@context.ProjectName</MudTd>
        <MudTd>@context.Startdate.ToShortDateString()</MudTd>
        <MudTd>@context.Status</MudTd>
        <MudTd Class="d-flex justify-center action-column" Style="">
            <MudTooltip Text="Edit" Style="margin:0 0 0 0;">
                <MudIconButton Style="padding:10px;" Icon="@Icons.Material.Filled.Edit" OnClick="@(async ()=>{await ProjectService.SetCurrentProjectAsync(context);
                                                                                      NavManager.NavigateTo($"projects/edit?projectid={context.ProjectId}");
                                                                                      })" />
            </MudTooltip>
            <MudTooltip Text="Details" Style="margin:0 0 0 0;">
                <MudIconButton Style="padding:10px;" Icon="@Icons.Material.Filled.OpenInNew" OnClick="@(async ()=>{GoToProject(context);})" />
            </MudTooltip>
            <MudTooltip Text="Delete" Style="margin:0 0 0 0;">
                <MudIconButton Style="padding:10px;" Icon="@Icons.Material.Filled.Delete" OnClick="@(async ()=>{await ProjectService.SetCurrentProjectAsync(context);
                                                                                        NavManager.NavigateTo($"projects/delete?projectid={context.ProjectId}");
                                                                                        })" />
            </MudTooltip>
        </MudTd>
    </RowTemplate>
    <ChildRowContent>
        <MudCard>
            <MudCardHeader>
                <MudText Typo="Typo.h6">@context.ProjectName</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudText>Date Started: @context.Startdate</MudText>
                <MudText>CreatedBy: </MudText>
            </MudCardContent>
        </MudCard>
    </ChildRowContent>
    <FooterContent>
        <MudTd></MudTd>
        <MudTd></MudTd>
        <MudTd></MudTd>
        <MudTd></MudTd>
    </FooterContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{10, 50, 100}" />
    </PagerContent>
</MudTable> *@

<style>
    /* Hide the action column by default */
    .mud-table-row .row{
        cursor:pointer;
    }
    .mud-table-row .action-column {
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.3s ease;
        margin:0 0 0 auto;
    }

    /* Show the action column on row hover */
    .mud-table-row:hover{
        background-color:transparent;
        color: pink;
    }
    .mud-table-row:hover .action-column {
        visibility: visible;
        opacity: 1;
    }

    .full-height-datagrid {
        display: flex;
        flex-direction: column;
        height: 100%; /* Ensure the grid takes the full height of its container */
    }

        .full-height-datagrid .mud-datagrid-table {
            flex-grow: 1; /* Make the rows container fill available space */
            overflow-y: auto; /* Add scrolling if the content overflows */
        }

        .full-height-datagrid .mud-datagrid-pager {
            flex-shrink: 0; /* Prevent the pager from shrinking */
        }
</style>


@code {

    // protected override void OnInitialized()
    // {
    //     db = DbFactory.CreateDbContext();
    // }
    public class CustomProject : Project
    {
        public int projID { get; set; }
        public bool showDetails { get; set; } = false;
    }
    List<Project> CustomProjects { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        ProjectService.PropertyChanged += HandlePropertyChanged;
        ProjectService.RegisterListener(StateHasChanged);
        await ProjectService.GetProjectsAsync();
        foreach(var proj in ProjectService.Projects)
        {
            var p = new CustomProject()
            {
                projID = proj.ProjectId
            };

            CustomProjects.Add(p);
        }
    }
    private void HandlePropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(ProjectService.CurrentProject))
        {
            InvokeAsync(StateHasChanged); // Trigger re-render
        }
    }
    async Task GoToProject(DataGridRowClickEventArgs<Project> args)
    {
        var proj = args.Item;
        await ProjectService.SetCurrentProjectAsync(proj);
        NavManager.NavigateTo($"projects/details?projectid={ProjectService.CurrentProject.ProjectId}");
    }
    private async Task RowMouseEnterEvent(TableRowHoverEventArgs<Project> eventArgs)
    {
        var proj = eventArgs.Item;
        await ProjectService.SetCurrentProjectAsync(proj);
        NavManager.NavigateTo($"projects/details?projectid={ProjectService.CurrentProject.ProjectId}");
    }
    public void Dispose()
    {
        ProjectService.PropertyChanged -= HandlePropertyChanged;
        ProjectService.UnregisterListener(StateHasChanged);
    }
}
