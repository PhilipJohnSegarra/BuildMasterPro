@inherits LayoutComponentBase
@using Syncfusion.Blazor.Navigations
@using BuildMasterPro.Data
@inject BuildMasterPro.Data.ApplicationDbContext context
@using Microsoft.EntityFrameworkCore

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0" Dense="@_dense" class="TransparentBG">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" class="SecondaryText" Edge="Edge.Start" OnClick="@ToggleDrawer" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/MudBlazor/MudBlazor" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" ClipMode="_clipMode" Breakpoint="@_breakpoint" Elevation="0" Variant="@DrawerVariant.Mini" class="TransparentBG" Style="padding:0 8px 0 8px;" MiniWidth="70px">
        <MudNavMenu>

            <!--Use the property ActiveClass="" to change the appearance when clicked-->
            <MudNavLink Match="NavLinkMatch.All" Icon="@HomeIcon" Href="/" @ref="_link" Style="margin:2rem 0 0 0;margin:1rem 0 1rem 0;height:25px;border-width: 0 0 0 5px" Class="NavLink" ActiveClass="NavLinkActive">
               Home
                </MudNavLink>

                <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Warehouse" Href="/resources" @ref="_link" Style="margin:1rem 0 1rem 0;height:25px;" Class="NavLink" ActiveClass="NavLinkActive">Resources</MudNavLink>

            
            
            <span style="display:@displayP;">
                <MudNavGroup Title="Workspaces" Icon="@Icons.Material.Outlined.Work" Expanded="true">
                    @* <MudNavLink Match="NavLinkMatch.All" Icon="material-symbols-outlined/square_foot" Href="/projects" @ref="_link2">Projects</MudNavLink> *@
                    @foreach (Project project in Projects)
                    {

                        <a href="/projects/details?projectid=@(project.ProjectId.ToString())">
                            <MudNavLink Match="NavLinkMatch.All" Icon="" @ref="_link2">@project.ProjectName</MudNavLink>
                        </a>
                    }
                </MudNavGroup>
            </span>

            
            <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Add" Href="/projects/create" @ref="_link2"
                        Style="border:1px solid black;border-radius:5px;width:95%;margin:1rem auto 1rem auto;">
                New Workspace
            </MudNavLink>
            <hr style="width:85%;margin:0 auto 0 auto;" />
            @* <span style="display:@displayAdditionalNavs;">
            <MudNavLink Match="NavLinkMatch.All" Icon="material-symbols-outlined/square_foot" Href="/projects" @ref="_link2">Projects</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Icon="material-symbols-outlined/square_foot" Href="/projects" @ref="_link2">Projects</MudNavLink>
            <MudNavLink Match="NavLinkMatch.All" Icon="material-symbols-outlined/square_foot" Href="/projects" @ref="_link2">Projects</MudNavLink>
            </span> *@
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent Class="TransparentBG" Style="padding: 3rem 0 0 0;">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>


@code {
    private bool _open = true;
    private bool _dense = false;
    private Breakpoint _breakpoint = Breakpoint.Md;
    private DrawerClipMode _clipMode = DrawerClipMode.Always;
    private MudNavLink _link;
    private MudNavLink _link2;
    private string displayP = "none";
    private string displayAdditionalNavs = "block";
    private List<Project> Projects { get; set; } = new();
    private Project? Project { get; set; } = new();

    private string DrawerWidth = "";

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && _link != null || _link2 != null)
        {
            _link.ActiveClass = "PrimaryText";
            _link2.ActiveClass = "PrimaryText";
            StateHasChanged(); // Refresh the UI to apply changes
        }
    }

    protected async override Task OnInitializedAsync()
    {
        Projects = await context.Project.ToListAsync();
        displayP = "block";
        displayAdditionalNavs = "none";
    }

    private void HoveredState()
    {
        _link.ActiveClass = "ContrastText";
        _link2.ActiveClass = "ContrastText";
    }

    private void ToggleDrawer()
    {
        _open = !_open;
        if (_open == true)
        {
            displayP = "block";
            displayAdditionalNavs = "none";
        }
        else
        {
            displayP = "none";
            displayAdditionalNavs = "block";
            DrawerWidth = "50px";
        }
        StateHasChanged();
    }

    const string HomeIcon = @"
            <svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 18 18'>
                <path d='M3 18C1.34315 18 0 16.6569 0 15V7.60555C0 6.60249 0.501303 5.6658 1.3359 5.1094L7.3359 1.1094C8.3436 0.437602 9.6564 0.437602 10.6641 1.1094L16.6641 5.1094C17.4987 5.6658 18 6.60249 18 7.60555V15C18 16.6569 16.6569 18 15 18H14.25C12.5931 18 11.25 16.6569 11.25 15V13.25C11.25 12.0074 10.2426 11 9 11C7.75736 11 6.75 12.0074 6.75 13.25V15C6.75 16.6569 5.40685 18 3.75 18H3Z' fill='#5A3E9F' />
            </svg>";
}